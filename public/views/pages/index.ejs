<!doctype html>
<html>
    <head>
        <% include ../partials/head %>
        <script>
            var socket = io('http://158.85.15.58:3000/game-namespace');

            var myUsername = "";
            var gameInfo = {};

            var timerOn = false;
            var timerEnd = 0;

            function updateTimer() {
                if(timerOn) {
                    var now = Date.now();
                    var dif = timerEnd - now;
                    if(dif <= 0) {
                        socket.emit('_time-up');
                    }
                    else {
                        document.getElementById('timer').innerHTML = "Time left: " + dif/1000;
                    }
                }
                setTimeout(updateTimer, 100)
            }
            updateTimer(); //initial call

            socket.on('_update-game', function(info) {
                gameInfo = info;
                if(gameInfo.players[0]) {
                    if (gameInfo.players[0].words) {
                        if (document.getElementById('user_1')) {
                            document.getElementById('user_1').innerHTML = "";
                            for (var i = 0; i < gameInfo.players[0].words.length; i++) {
                                var newP = document.createElement('p');
                                newP.innerHTML = gameInfo.players[0].words[i];
                                document.getElementById('user_1_info').appendChild(newP);
                            }
                        }
                    }
                }
                if(gameInfo.players[1]) {
                    if (gameInfo.players[1].words) {
                        if (document.getElementById('user_2')) {
                            document.getElementById('user_2').innerHTML = "";
                            for (var i = 0; i < gameInfo.players[1].words.length; i++) {
                                var newP = document.createElement('p');
                                newP.innerHTML = gameInfo.players[1].words[i];
                                document.getElementById('user_2_info').appendChild(newP);
                            }
                        }
                    }
                }
            });
            socket.on('_begin-game', function(endTime) {
                timerOn = true;
                timerEnd = endTime;
                var temp = document.getElementById('soup-screen-temp');
                for (var a = 0; a < 16; a++) {
                    temp.content.querySelector('#sq_' + a).innerHTML = gameInfo.letters[a];
                }
                temp.content.querySelector('#title_1').innerHTML = gameInfo.players[0].name;
                temp.content.querySelector('#title_2').innerHTML = gameInfo.players[1].name;

                //Clear out what is already there
                document.getElementById('main').innerHTML = "";
                //Append the template
                document.getElementById('main').appendChild(temp.content.cloneNode(true));
            });
            socket.on('_incorrect-word', function(err) {
                document.getElementById('newword').value = "";
                document.getElementById('newword').value = err;
            });
            socket.on('_winner-and-end', function(winner) {
                var temp = document.getElementById('end-screen-temp');
                temp.content.querySelector('#para').innerHTML = 'Game Over.. and the winner is ' + winner + ', way to go!';
                //Clear out what is already there
                document.getElementById('main').innerHTML = "";
                //Append the template
                document.getElementById('main').appendChild(temp.content.cloneNode(true));
            });
            socket.on('_user-disconnect', function() {
                var temp = document.getElementById('user-disconnected-screen-temp');
                //Clear out what is already there
                document.getElementById('main').innerHTML = "";
                //Append the template
                document.getElementById('main').appendChild(temp.content.cloneNode(true));
            });
            //to be called by the submit button on the username form
            function setUsername(id) {
                var username = document.getElementById(id).value; //look at cleanInput for this...

                // If the username is valid
                if (username) {
                    // Tell the server your username
                    myUsername = username;
                    socket.emit('_add_user', myUsername);
                }
            }

            function submitWord(id) {
                var word = document.getElementById(id).value.toLowerCase(); //look at cleanInput for this...

                if (word) {
                    socket.emit('_submit-word', {word: word, name: myUsername});
                }
            }
        </script>

    </head>

    <template id="soup-screen-temp">
        <div class="row">
            <div class="col s12 m6 l6">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <div class="row" id="row1">
                            <div class="col s1" id="sq_0">1</div>
                            <div class="col s1" id="sq_1">2</div>
                            <div class="col s1" id="sq_2">3</div>
                            <div class="col s1" id="sq_3">4</div>

                        </div>
                        <div class="row" id="row2">
                            <div class="col s1" id="sq_4">1</div>
                            <div class="col s1" id="sq_5">2</div>
                            <div class="col s1" id="sq_6">3</div>
                            <div class="col s1" id="sq_7">4</div>
                        </div>
                        <div class="row" id="row3">
                            <div class="col s1" id="sq_8">1</div>
                            <div class="col s1" id="sq_9">2</div>
                            <div class="col s1" id="sq_10">3</div>
                            <div class="col s1" id="sq_11">4</div>
                        </div>
                        <div class="row" id="row4">
                            <div class="col s1" id="sq_12">1</div>
                            <div class="col s1" id="sq_13">2</div>
                            <div class="col s1" id="sq_14">3</div>
                            <div class="col s1" id="sq_15">4</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col s6 m6 l6">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <div class="col s2" id="user_1">
                            <span id="title_1"></span>
                            <div id="user_1_info">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col s6 m6 l6">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        <div class="col s2" id="user_2">
                            <span id="title_2"></span>
                            <div id="user_2_info">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>



        <div class="row">
            <form onsubmit="return false;">
                <input id="newword" name="newword" type="text">
                <label for="newword">Words</label>
                <button class="waves-effect waves-light btn" onClick="<%- " submitWord('newword')" %>" id="word-form"><i class="material-icons left">send</i>Submit</button>
            </form>
        </div>



        <p id="timer"></p>
    </template>

    <template id="user-disconnected-screen-temp">
        <p>The other user has disconnected. Please reload!</p>
    </template>

    <template id="end-screen-temp">
        <p id="para"></p>
    </template>

    <body>
        <main id="main">
            <div class="container">
                <div class="row">
                    <div class="input-field col s6 m6 l6">
                        <form onsubmit="return false;">
                            <input id="newuser" name="newuser" type="text">
                            <label for="newuser">Nickname</label>
                            <button class="waves-effect waves-light btn" onClick="<%- " setUsername('newuser')" %>" id="name-form">Enter</button>
                        </form>
                    </div>
                </div>
            </div>
        </main>
    </body>
</html>
